model Server {
    id          String       @id @default(uuid())
    name        String
    ownerId     String
    owner       User         @relation(fields: [ownerId], references: [id])
    members     Member[]
    imageId     String?      @unique
    image       File?        @relation(fields: [imageId], references: [id])
    isPrivate   Boolean
    roles       Role[]
    channels    Channel[]
    invitations Invitation[]
    banRecords  BanRecord[]
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
}

model BanRecord {
    id       String  @id @default(uuid())
    userId   String
    user     User    @relation(fields: [userId], references: [id])
    reason   String?
    serverId String
    server   Server  @relation(fields: [serverId], references: [id])
}

model Invitation {
    id        String   @id @default(uuid())
    creatorId String
    creator   User     @relation(fields: [creatorId], references: [id])
    serverId  String
    server    Server   @relation(fields: [serverId], references: [id])
    code      String
    duration  Int?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Member {
    id        String   @id @default(uuid())
    userId    String
    user      User     @relation(fields: [userId], references: [id])
    roles     Role[]
    serverId  String
    server    Server   @relation(fields: [serverId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
